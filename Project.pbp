define OSC 4   

DEFINE LCD_DREG PORTB 
DEFINE LCD_DBIT 4     
DEFINE LCD_RSREG PORTB
DEFINE LCD_RSBIT 2    
DEFINE LCD_EREG PORTB 
DEFINE LCD_EBIT 3     
DEFINE LCD_BITS 4     
DEFINE LCD_LINES 2 
DEFINE LCD_COMMANDUS 2000
DEFINE LCD_DATAUS 50 

TRISC =%11110000
LCDOUT $FE,$01   
ON INTERRUPT GOTO INTERRUPTION
INTCON =%10110000
OPTION_REG=$57
KEYB VAR BYTE[64]
PUNT VAR BYTE

D_E VAR BYTE[6]
b var bit
'''''''''''''''''''''''''''''''
'DATA DECLARATION AND VARIABLES NECESSARY
'FOR EEPROM CONTROL
I VAR BYTE  
J var byte      
K var byte   
K_TOP var byte 

read 250,d_e[0]
read 251,d_e[1]
read 252,d_e[2]
read 253,d_e[3]
read 254,d_e[4]
read 255,d_e[5]
'''''''''''''''''''''''''''''''

L_SMS VAR BYTE[4]
L_SMS[0]=128
L_SMS[1]=192
L_SMS[2]=137
L_SMS[3]=201 

POS VAR BYTE
POS=0 
EPOS VAR BYTE
p var byte
q var bit

_char var byte
_char=255
c var bit
c_char var word
C_CHAR=11
char VAR byte
char=255
auxChar VAR byte
char=255

MENU VAR BIT
SHOW VAR BIT
SMS VAR BIT
auxSMS var bit
DELETE VAR BIT
EDIT VAR BIT
ADD VAR BIT
SAVE VAR BIT
ADD=0
 LCDOUT $FE,$0C
'''''
'MENU=1
MENU=1
INICIO:      
    IF MENU =1 THEN GOSUB _MENU  
     
    if ADD=1 THEN                                        
      if epos<>255 then
        gosub _TEXT 
      else         
        lcdout $FE,128         
        LCDOUT "MEMORY IS FULL"                        
        gosub HOME
      endif
    ENDIF          
    
    IF SMS=1   THEN ' SHOW SMS FOR SCREEN    
       gosub _MS_M
    ENDIF 
    
        
    IF DELETE=1 THEN 
        IF POS<>0 THEN
             gosub _DELETE
             LCDOUT $FE,1                                                
        ELSE                                                                 
            GOSUB _SHOW            
        ENDIF        
    ENDIF 
    
                          
    IF EDIT=1 THEN 
        IF POS<>0 THEN         
            if q =1 then 
                 EPOS=(POS-1)*2
                 gosub _SET_P
                 LCDOUT $FE,1
                 LCDOUT $FE, $0F            
                 gosub _SMS            
                 q=0        
                   LCDOUT $FE, $0F                            
                 char=0
            endif  
                                  
            gosub _TEXT                                             
            char=0
        ELSE                                                                 
            GOSUB _SHOW            
        ENDIF
    ENDIF 
    PORTC=15
     gosub _SAVE_EP
GOTO INICIO  
_SET_P:
    p=0     
    FOR i=0 TO 64
         READ d_e[ePOS+1]+P,CHAR   
        p=p+1      
        IF CHAR=35 then 
            i=65        
        endif
    NEXT i
RETURN
       
_TEXT:  'RESEIVE P= MEMORY POINTER ,EPOS = D_E SECTOR
    if char="#" then 
        lcdout $FE,1        
        d_e[epos]=1
        lcdout "SAVED SMS ->", dec epos/2+1
        pause 500
        char="0"  
        pos=0     
  
     if edit=1 then   write d_e[epos+1]+p,"#"
     if add=1 then   write d_e[epos+1]+p-1,"#" 
  
        GOSUB HOME  
        c=0
        _char=0                         
    endif
    
    IF char="1" THEN     
         b=1  
         char=0
        _char=0                                                   
    ENDIF
    
    if char = "*" then
         char="0" 
         GOSUB HOME 
         c=0
         _char=0
         pos=0    
    endif
    
    if c=1 then
         IF CHAR<>0 THEN  
            IF auxchar=char then                      
                 K_TOP=3
                 _CHAR=CHAR                                       
                 if char ="2" then
                     _char="A"+k 
                 endif
                 if char ="3" then 
                    _char="D"+k 
                 endif
                 if char ="4" then 
                    _char="G"+k 
                 endif
                 if char ="5" then 
                    _char="J"+k 
                 endif
                 if char ="6" then 
                     _char="M"+k 
                 endif
                 if char ="7" then 
                     _char="P"+k 
                     K_TOP=4
                 endif
                 if char ="8" then 
                    _char="T"+k 
                 endif
                 if char ="9" then 
                    _char="W"+k 
                    K_TOP=4
                 endif                
                  K=K+1
                 IF K=K_TOP THEN K=0                             
            ELSE 
                _CHAR=CHAR 
                 K=0
                 c=0
                 if char ="0" then                  
                    _char=" "
                 endif                                         
            endif 
             auxchar=char                      
        ENDIF 
                       
         CHAR=0
         IF P<39 THEN
             IF C_CHAR=15 AND P>13 THEN LCDOUT $FE,$18 
                                   
             lcdout $FE,128+p
             LCDOUT _CHAR 
             
             if edit=1 then  write d_e[epos+1]+p,_char 
             if add=1 then  write d_e[epos+1]+p-1,_char 
             
               if b=1 then
                    p=p-1
                    c_char=100
                    b=0       
                    c=0  
                    lcdout $FE,128+p," " 
                    lcdout $FE,128+p+24                                
               endif   
                                  
            ELSEIF P<64 THEN
            
             IF P=39 THEN  LCDOUT $FE,2  
                                    
             lcdout $FE,128+p+25
             LCDOUT _CHAR
              
             if edit=1 then  write d_e[epos+1]+p,_char 
             if add=1 then  write d_e[epos+1]+p-1,_char 
             
               if b=1 then
                    p=p-1
                    c_char=100
                    b=0       
                    c=0  
                     lcdout $FE,128+p+25," "                                
                     lcdout $FE,128+p+24                                                         
              endif
               
         ENDIF
         if b=1 then
            p=p-1
            c_char=100
            b=0
            c=0                   
         endif
    endif       
RETURN

_MENU:  ' MEIN MENU
    LCDOUT $FE,128
     LCDOUT "1.SHOW"
     LCDOUT $FE,192
     LCDOUT "2.EDIT"
     LCDOUT $FE,136
     LCDOUT "3.DELETE"
     LCDOUT $FE,200     
     LCDOUT "4.ADD"
     IF CHAR="1" THEN                  
            MENU=0
            SMS=1
            char=0            
         LCDOUT $FE,1   
     ENDIF
     if CHAR="2" THEN   
            EDIT=1
            MENU=0            
            p=0
            char=0
            c=0
            Q=1
            POS=0           
             LCDOUT $FE,1
     ENDIF
     IF CHAR="3" THEN                   
            MENU=0
            DELETE=1
            pos=0
            char=0
         LCDOUT $FE,1 
     ENDIF  
     if char="4" then 
             MENU=0
             ADD=1
             p=0
             char=0
             c=0
             gosub _FIRST_EMTY  
             LCDOUT $FE,1 
             LCDOUT $FE, $0F

     endif          
RETURN

HOME:                 'RESET ALL DATA, AND RETURN TO HOME
     IF CHAR = "0" THEN                     
            MENU=1
            sms =0
            POS=0
            delete=0
            char=0
            auxsms=0   
            add=0  
            EDIT=0     
            LCDOUT $FE,1
            LCDOUT $FE,$0C
     ENDIF 
RETURN
_FIRST_EMTY:'RETURN IN EPOS THE FIRST NULL POSITION 
    FOR I=0 TO 5 STEP 2
        EpOS=255      
        IF D_E[I]=0 THEN
         EPOs=i
            I=6   
        endif
    NEXT I
RETURN
 _MS_M:  'MOVE FUNTIONS ON SCREEN
         IF POS <>0 THEN 
                IF auxsms=0 THEN LCDOUT $FE,1                       
                                    SELECT CASE char                
                                      CASE "6" 
                                            LCDOUT $FE,$18 
                                            char=0
                                      CASE "5" 
                                            LCDOUT $FE,$2
                                            char=0
                                      CASE "4" 
                                            LCDOUT $FE,$1C
                                            char=0  
                                    END SELECT            
                GOSUB _SMS 
                if char="*" then 
                       LCDOUT $FE,1                                                                                     
                       POS=0                                              
                       auxsms=0
                       char=0 
                endif
            
        ELSE                                                       
            GOSUB _SHOW
        ENDIF
RETURN
_SMS:  'SHOW SELECTED SMS, VARIABLE [POS]
    if auxsms=0 then     
         i=(POS-1)*2      
        FOR J=0 TO 63
            READ d_e[i+1]+J,CHAR                     
            IF CHAR<>35 THEN 
                IF J < 40  THEN LCDOUT $FE,128+J           
                IF J> 39 THEN LCDOUT $FE,128+23+J                                    
                LCDOUT CHAR 
            else 
                j=64
            ENDIF                                         
        NEXT J
        auxsms=1                 
    endif  
    GOSUB HOME           
RETURN

_SHOW: ' LIST THE SMS AND RETURN SELECTION IN POS  
     GOSUB _LAST
     if char="1" and d_e[0]=1 then
        pos=1 
     endif                                              
     if char="2" and d_e[2]=1 then
        pos=2                                      
     endif       
     if char="3" and d_e[4]=1 then
        pos=3        
     endif                
     GOSUB HOME             
     char=0      
RETURN  
_LAST:    
    J=0
    FOR I=0 TO 5 STEP 2                                                                               
        IF D_E[I]=1 THEN
            LCDOUT $FE,l_sms[j] 
            LCDOUT dec i/2+1,"->SMS"
            J=J+1
        endif
    NEXT I
RETURN        
_DELETE:   'ACTIVE EMTY SPACE IN EEPROM 
    POS=(POS-1)*2
    d_e[POS]=0
    pos=0
RETURN
_SAVE_EP:  'SAVE THE VECTOR OF POSITIONS.     
    write 250,d_e[0]
    write 251,d_e[1]
    write 252,d_e[2]
    write 253,d_e[3]
    write 254,d_e[4]
    write 255,d_e[5]
RETURN


DISABLE 
INTERRUPTION:
        if  INTCON.1=1 then
            INTCON.1=0
            PORTC=4
            PAUSE 1
            PORTC=1
            PAUSE 1
                  IF PORTC.4=1 THEN char = "1"                   
                  IF PORTC.5=1 THEN char = "2"
                  IF PORTC.6=1 THEN char = "3"            
            PORTC=2
            PAUSE 10
                  IF PORTC.4=1 THEN char = "4"
                  IF PORTC.5=1 THEN char = "5"
                  IF PORTC.6=1 THEN char = "6"
            PORTC=4
            PAUSE 1
                  IF PORTC.4=1 THEN char = "7"
                  IF PORTC.5=1 THEN char = "8"
                  IF PORTC.6=1 THEN char = "9"
            PORTC=8
            PAUSE 1
                  IF PORTC.4=1 THEN char = "*"
                  IF PORTC.5=1 THEN char = "0"                            
                  IF PORTC.6=1 THEN char = "#"       
            PAUSE 50
            C_CHAR=0
            if char<>"1" then  C=1
            PORTC=0
        endif
        if INTCON.2=1 THEN             
            INTCON.2=0 
            if char<>"1" then   
                IF C_CHAR<15 THEN 
                     C=1             
                ENDIF
                IF C_CHAR<16 THEN 
                    C_CHAR=C_CHAR+1
                    IF C_CHAR=16 THEN
                     C=0  
                     p=p+1                             
                    endif
                ELSE
                 AUXCHAR=0  
                ENDIF            
            endif
        ENDIF         
RESUME
ENABLE 
''''''''''''
